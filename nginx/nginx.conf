upstream library {
    server backend:8080;
}

server {
    listen 8000;
    location / {
        proxy_pass http://library;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host:8000;
        proxy_redirect off;

        if ($request_method = 'OPTIONS') {
            # Blow is based on this: https://michielkalkman.com/snippets/nginx-cors-open-configuration/
            # Для большей безопасности вместо * можно указать конкретные домены, для которых будут разрешены запросы.
            add_header 'Access-Control-Allow-Origin' '*';
            # Cookies
            add_header 'Access-Control-Allow-Credentials' 'true';
            # Если в приложении будут использоваться другие методы, например PUT, PATCH,
            # необходимо будет добавить их в список доступных методов.
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS, DELETE';
            # Custom headers and headers various browsers *should* be OK with but aren't
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            # Tell client that this info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Пока не убрал эту опцию ЗДЕСЬ, ругалось на задвоенные хэдеры
        #add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

    }
}